// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExecuterUnit.proto

#ifndef PROTOBUF_ExecuterUnit_2eproto__INCLUDED
#define PROTOBUF_ExecuterUnit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace info {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ExecuterUnit_2eproto();
void protobuf_AssignDesc_ExecuterUnit_2eproto();
void protobuf_ShutdownFile_ExecuterUnit_2eproto();

class ExecuterUnit;

// ===================================================================

class ExecuterUnit : public ::google::protobuf::Message {
 public:
  ExecuterUnit();
  virtual ~ExecuterUnit();

  ExecuterUnit(const ExecuterUnit& from);

  inline ExecuterUnit& operator=(const ExecuterUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuterUnit& default_instance();

  void Swap(ExecuterUnit* other);

  // implements Message ----------------------------------------------

  ExecuterUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuterUnit& from);
  void MergeFrom(const ExecuterUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MemoryTotal = 1;
  inline bool has_memorytotal() const;
  inline void clear_memorytotal();
  static const int kMemoryTotalFieldNumber = 1;
  inline ::google::protobuf::int32 memorytotal() const;
  inline void set_memorytotal(::google::protobuf::int32 value);

  // optional int32 MemoryRemained = 2;
  inline bool has_memoryremained() const;
  inline void clear_memoryremained();
  static const int kMemoryRemainedFieldNumber = 2;
  inline ::google::protobuf::int32 memoryremained() const;
  inline void set_memoryremained(::google::protobuf::int32 value);

  // optional int32 CpuTotal = 3;
  inline bool has_cputotal() const;
  inline void clear_cputotal();
  static const int kCpuTotalFieldNumber = 3;
  inline ::google::protobuf::int32 cputotal() const;
  inline void set_cputotal(::google::protobuf::int32 value);

  // optional int32 CpuRemaind = 4;
  inline bool has_cpuremaind() const;
  inline void clear_cpuremaind();
  static const int kCpuRemaindFieldNumber = 4;
  inline ::google::protobuf::int32 cpuremaind() const;
  inline void set_cpuremaind(::google::protobuf::int32 value);

  // optional int32 pid = 5;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 5;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);

  // optional string CodePath = 6;
  inline bool has_codepath() const;
  inline void clear_codepath();
  static const int kCodePathFieldNumber = 6;
  inline const ::std::string& codepath() const;
  inline void set_codepath(const ::std::string& value);
  inline void set_codepath(const char* value);
  inline void set_codepath(const char* value, size_t size);
  inline ::std::string* mutable_codepath();
  inline ::std::string* release_codepath();
  inline void set_allocated_codepath(::std::string* codepath);

  // optional string IpAddress = 7;
  inline bool has_ipaddress() const;
  inline void clear_ipaddress();
  static const int kIpAddressFieldNumber = 7;
  inline const ::std::string& ipaddress() const;
  inline void set_ipaddress(const ::std::string& value);
  inline void set_ipaddress(const char* value);
  inline void set_ipaddress(const char* value, size_t size);
  inline ::std::string* mutable_ipaddress();
  inline ::std::string* release_ipaddress();
  inline void set_allocated_ipaddress(::std::string* ipaddress);

  // @@protoc_insertion_point(class_scope:info.ExecuterUnit)
 private:
  inline void set_has_memorytotal();
  inline void clear_has_memorytotal();
  inline void set_has_memoryremained();
  inline void clear_has_memoryremained();
  inline void set_has_cputotal();
  inline void clear_has_cputotal();
  inline void set_has_cpuremaind();
  inline void clear_has_cpuremaind();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_codepath();
  inline void clear_has_codepath();
  inline void set_has_ipaddress();
  inline void clear_has_ipaddress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 memorytotal_;
  ::google::protobuf::int32 memoryremained_;
  ::google::protobuf::int32 cputotal_;
  ::google::protobuf::int32 cpuremaind_;
  ::std::string* codepath_;
  ::std::string* ipaddress_;
  ::google::protobuf::int32 pid_;
  friend void  protobuf_AddDesc_ExecuterUnit_2eproto();
  friend void protobuf_AssignDesc_ExecuterUnit_2eproto();
  friend void protobuf_ShutdownFile_ExecuterUnit_2eproto();

  void InitAsDefaultInstance();
  static ExecuterUnit* default_instance_;
};
// ===================================================================


// ===================================================================

// ExecuterUnit

// optional int32 MemoryTotal = 1;
inline bool ExecuterUnit::has_memorytotal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecuterUnit::set_has_memorytotal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecuterUnit::clear_has_memorytotal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecuterUnit::clear_memorytotal() {
  memorytotal_ = 0;
  clear_has_memorytotal();
}
inline ::google::protobuf::int32 ExecuterUnit::memorytotal() const {
  // @@protoc_insertion_point(field_get:info.ExecuterUnit.MemoryTotal)
  return memorytotal_;
}
inline void ExecuterUnit::set_memorytotal(::google::protobuf::int32 value) {
  set_has_memorytotal();
  memorytotal_ = value;
  // @@protoc_insertion_point(field_set:info.ExecuterUnit.MemoryTotal)
}

// optional int32 MemoryRemained = 2;
inline bool ExecuterUnit::has_memoryremained() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExecuterUnit::set_has_memoryremained() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExecuterUnit::clear_has_memoryremained() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExecuterUnit::clear_memoryremained() {
  memoryremained_ = 0;
  clear_has_memoryremained();
}
inline ::google::protobuf::int32 ExecuterUnit::memoryremained() const {
  // @@protoc_insertion_point(field_get:info.ExecuterUnit.MemoryRemained)
  return memoryremained_;
}
inline void ExecuterUnit::set_memoryremained(::google::protobuf::int32 value) {
  set_has_memoryremained();
  memoryremained_ = value;
  // @@protoc_insertion_point(field_set:info.ExecuterUnit.MemoryRemained)
}

// optional int32 CpuTotal = 3;
inline bool ExecuterUnit::has_cputotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExecuterUnit::set_has_cputotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExecuterUnit::clear_has_cputotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExecuterUnit::clear_cputotal() {
  cputotal_ = 0;
  clear_has_cputotal();
}
inline ::google::protobuf::int32 ExecuterUnit::cputotal() const {
  // @@protoc_insertion_point(field_get:info.ExecuterUnit.CpuTotal)
  return cputotal_;
}
inline void ExecuterUnit::set_cputotal(::google::protobuf::int32 value) {
  set_has_cputotal();
  cputotal_ = value;
  // @@protoc_insertion_point(field_set:info.ExecuterUnit.CpuTotal)
}

// optional int32 CpuRemaind = 4;
inline bool ExecuterUnit::has_cpuremaind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExecuterUnit::set_has_cpuremaind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExecuterUnit::clear_has_cpuremaind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExecuterUnit::clear_cpuremaind() {
  cpuremaind_ = 0;
  clear_has_cpuremaind();
}
inline ::google::protobuf::int32 ExecuterUnit::cpuremaind() const {
  // @@protoc_insertion_point(field_get:info.ExecuterUnit.CpuRemaind)
  return cpuremaind_;
}
inline void ExecuterUnit::set_cpuremaind(::google::protobuf::int32 value) {
  set_has_cpuremaind();
  cpuremaind_ = value;
  // @@protoc_insertion_point(field_set:info.ExecuterUnit.CpuRemaind)
}

// optional int32 pid = 5;
inline bool ExecuterUnit::has_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExecuterUnit::set_has_pid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExecuterUnit::clear_has_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExecuterUnit::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 ExecuterUnit::pid() const {
  // @@protoc_insertion_point(field_get:info.ExecuterUnit.pid)
  return pid_;
}
inline void ExecuterUnit::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:info.ExecuterUnit.pid)
}

// optional string CodePath = 6;
inline bool ExecuterUnit::has_codepath() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExecuterUnit::set_has_codepath() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExecuterUnit::clear_has_codepath() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExecuterUnit::clear_codepath() {
  if (codepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codepath_->clear();
  }
  clear_has_codepath();
}
inline const ::std::string& ExecuterUnit::codepath() const {
  // @@protoc_insertion_point(field_get:info.ExecuterUnit.CodePath)
  return *codepath_;
}
inline void ExecuterUnit::set_codepath(const ::std::string& value) {
  set_has_codepath();
  if (codepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codepath_ = new ::std::string;
  }
  codepath_->assign(value);
  // @@protoc_insertion_point(field_set:info.ExecuterUnit.CodePath)
}
inline void ExecuterUnit::set_codepath(const char* value) {
  set_has_codepath();
  if (codepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codepath_ = new ::std::string;
  }
  codepath_->assign(value);
  // @@protoc_insertion_point(field_set_char:info.ExecuterUnit.CodePath)
}
inline void ExecuterUnit::set_codepath(const char* value, size_t size) {
  set_has_codepath();
  if (codepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codepath_ = new ::std::string;
  }
  codepath_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:info.ExecuterUnit.CodePath)
}
inline ::std::string* ExecuterUnit::mutable_codepath() {
  set_has_codepath();
  if (codepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codepath_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:info.ExecuterUnit.CodePath)
  return codepath_;
}
inline ::std::string* ExecuterUnit::release_codepath() {
  clear_has_codepath();
  if (codepath_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = codepath_;
    codepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ExecuterUnit::set_allocated_codepath(::std::string* codepath) {
  if (codepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete codepath_;
  }
  if (codepath) {
    set_has_codepath();
    codepath_ = codepath;
  } else {
    clear_has_codepath();
    codepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:info.ExecuterUnit.CodePath)
}

// optional string IpAddress = 7;
inline bool ExecuterUnit::has_ipaddress() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExecuterUnit::set_has_ipaddress() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ExecuterUnit::clear_has_ipaddress() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ExecuterUnit::clear_ipaddress() {
  if (ipaddress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipaddress_->clear();
  }
  clear_has_ipaddress();
}
inline const ::std::string& ExecuterUnit::ipaddress() const {
  // @@protoc_insertion_point(field_get:info.ExecuterUnit.IpAddress)
  return *ipaddress_;
}
inline void ExecuterUnit::set_ipaddress(const ::std::string& value) {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipaddress_ = new ::std::string;
  }
  ipaddress_->assign(value);
  // @@protoc_insertion_point(field_set:info.ExecuterUnit.IpAddress)
}
inline void ExecuterUnit::set_ipaddress(const char* value) {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipaddress_ = new ::std::string;
  }
  ipaddress_->assign(value);
  // @@protoc_insertion_point(field_set_char:info.ExecuterUnit.IpAddress)
}
inline void ExecuterUnit::set_ipaddress(const char* value, size_t size) {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipaddress_ = new ::std::string;
  }
  ipaddress_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:info.ExecuterUnit.IpAddress)
}
inline ::std::string* ExecuterUnit::mutable_ipaddress() {
  set_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ipaddress_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:info.ExecuterUnit.IpAddress)
  return ipaddress_;
}
inline ::std::string* ExecuterUnit::release_ipaddress() {
  clear_has_ipaddress();
  if (ipaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ipaddress_;
    ipaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ExecuterUnit::set_allocated_ipaddress(::std::string* ipaddress) {
  if (ipaddress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ipaddress_;
  }
  if (ipaddress) {
    set_has_ipaddress();
    ipaddress_ = ipaddress;
  } else {
    clear_has_ipaddress();
    ipaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:info.ExecuterUnit.IpAddress)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace info

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ExecuterUnit_2eproto__INCLUDED
